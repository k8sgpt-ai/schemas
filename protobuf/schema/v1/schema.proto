syntax = "proto3";

package schema.v1;

option go_package = "schema/service/v1";

// well know type by google, gRPC gateway uses HTTP annotation.
import "google/api/annotations.proto";

message AnalyzeRequest {
  string backend = 1;
  string namespace = 2;
  bool explain = 3;
  bool anonymize = 4;
  bool nocache = 5;
  string language = 6;
  int32 max_concurrency = 7;
  string output = 8;
  repeated string filters = 9;
}

message SensitiveData {
  string unmasked = 1;
  string masked = 2;
}

message ErrorDetail {
  string text = 1;
  repeated SensitiveData sensitive = 2;
}

message Result {
  string kind = 1;
  string name = 2;
  repeated ErrorDetail error = 3;
  string details = 4;
  string parent_object = 5;
}

message AnalyzeResponse {
  Error error = 1;
  repeated string errors = 2;
  string status = 3;
  int32 problems = 4;
  repeated Result results = 5;
}

message Error {
  string message = 1;
  int32 code = 2;
}

message Analysis {
  repeated AnalysisItem analysis = 1;
}

message AnalysisItem {
  string name = 1;
  string description = 2;
}

message AddConfigRequest {
  Cache cache = 1;
  Integrations integrations = 2;
}

message AddConfigResponse {
  string status = 1;
}

message RemoveConfigRequest {
  Cache cache = 1;
  Integrations integrations = 2;
}

message RemoveConfigResponse {
  string status = 1;
}

message Cache {
  oneof cache_type {
    S3Cache s3_cache = 1;
    AzureCache azure_cache = 2;
    GCSCache gcs_cache = 3;
  }
}

message S3Cache {
  string region = 1;
  string bucket_name = 2;
}

message AzureCache {
  string storage_account = 1;
  string container_name = 2;
}

message GCSCache {
  string region = 1;
  string bucket_name = 2;
  string project_id = 3;
}

message Trivy {
  bool enabled = 1;
  bool skip_install = 2;
  string namespace = 3;
}

message Integrations {
  Trivy trivy = 1;
}

message ListIntegrationsRequest {}

// Add integrations to list
message ListIntegrationsResponse {
  Trivy trivy = 1;
}

service ServerService {
  rpc Analyze(AnalyzeRequest) returns (AnalyzeResponse) {
    // option type is http
    option (google.api.http) = {
      // this is url, for RESTfull/JSON api and method
      // this line means when a HTTP post request comes with "/v1/analyze" call this rpc method over this service
        get: "/v1/analyze"
      };
  }
  rpc AddConfig(AddConfigRequest) returns (AddConfigResponse) {}
  rpc RemoveConfig(RemoveConfigRequest) returns (RemoveConfigResponse) {}
  rpc ListIntegrations(ListIntegrationsRequest) returns (ListIntegrationsResponse) {
    // option type is http
    option (google.api.http) = {
      // this line means when a HTTP GET request comes with "/v1/list" call this rpc method over this service
        get: "/v1/list"
      };
  }
}
